name: "Vprofile IaC"

on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

permissions:
  id-token: write

env:
  AWS_REGION: us-east-1  
  EKS_CLUSTER: vprofile-eks  

jobs:
  terraform:
    name: "Apply Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::182399687748:role/github-action-OICD
          aws-region: ${{ env.AWS_REGION }}

      - name: Verify AWS Credentials
        run: |
          aws sts get-caller-identity

      - name: Terraform Init
        id: Init
        run: terraform init -backend-config="bucket=${{ secrets.BUCKET_TF_STATE }}"
      
      - name: Terraform Format
        id: Format
        run: terraform fmt -check

      - name: Terraform Validate
        id: Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform Plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apple
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve -input=false -parallelism=1 planfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::182399687748:role/github-action-OICD
          aws-region: ${{ env.AWS_REGION }}
    
      - name: Get Kube config file
        id: getconfig
        if: steps.apple.outcome == 'success'
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER }} 

      - name: Install Ingress controller
        if: steps.apple.outcome == 'success' && steps.getconfig.outcome == 'success'
        run: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.3/deploy/static/provider/aws/deploy.yaml
