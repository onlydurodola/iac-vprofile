name: "Vprofile IaC"

on:
  push:
    branches:
      - main
      - stage
    paths:
      - terraform/**
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-1
  EKS_CLUSTER: vprofile-eks

jobs:
  terraform:
    name: "Apply Terraform"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v2

      - name: Debug Environment Variables
        shell: bash
        run: |
          echo "AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID"
          echo "AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY"
          echo "BUCKET_TF_STATE: $BUCKET_TF_STATE"
          echo "AWS_REGION: $AWS_REGION"

      - name: Check AWS_ACCESS_KEY_ID
        shell: bash
        run: |
          if [ -z "$AWS_ACCESS_KEY_ID" ]; then
            echo "AWS_ACCESS_KEY_ID is empty or not set!"
            exit 1
          else
            echo "AWS_ACCESS_KEY_ID is set correctly."
          fi

      - name: Terraform Init
        id: Init
        run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
      
      - name: Terraform Format
        id: Format
        run: terraform fmt -check

      - name: Terraform Validate
        id: Validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -out planfile
        continue-on-error: true

      - name: Terraform Plan status
        if: steps.plan.outcome == 'failure'
        run: exit 1